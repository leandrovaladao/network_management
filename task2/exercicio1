from sklearn.linear_model import LinearRegression
from sklearn.model_selection import train_test_split
from extract_csv import extract_file_x, extract_file_y
import numpy as np

def do_linear_regression():
    x = extract_file_x()
    y = extract_file_y()

    x = x.loc[:, x.columns != 'TimeStamp']
    y = y.loc[:, y.columns != 'TimeStamp']

    train_x, test_x, train_y, test_y = train_test_split(x, y, test_size=0.3)

    naive_mean = np.mean(train_y).item()

    model = LinearRegression()

    model.fit(train_x, train_y)

    predict_results = model.predict(test_x)

    sum_values = 0
    # Lista criada para conferir valores
    # list_values = []
    for index, predict_result in enumerate(predict_results):
        # list_values.append(abs(test_y['DispFrames'][test_y['DispFrames'].index[index]]-predict_result))
        sum_values += abs(test_y['DispFrames'][test_y['DispFrames'].index[index]]-predict_result)

    NMAE = (sum_values/len(test_y))/naive_mean

    print("Coeficientes: ", model.coef_)
    print("Naive Mean: ", naive_mean)
    print("Normalized Mean Absolute Error: ", NMAE)

do_linear_regression()
